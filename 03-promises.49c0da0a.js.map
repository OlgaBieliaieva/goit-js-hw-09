{"mappings":"YAAA,IACIA,EAAa,KACbC,EAAW,KAkCf,SAASC,EAAcC,EAAUC,GAE/B,IAAMC,EAAW,IAAIC,SAAQ,SAACC,EAASC,GACfC,KAAKC,SAAW,GAEpCH,EAAS,CAACI,SAAAR,EAAUC,UAGpBI,EAAQ,CAACG,SAAAR,EAAUC,S,IAIvB,OADAQ,QAAQC,IAAIR,GACLA,C,EA1CI,CACXS,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAMC,iBAEN,IAAMC,EAAYC,OAAOH,EAAMI,OAAOC,SAAgB,MAAEC,OAClDC,EAAeJ,OAAOH,EAAMI,OAAOC,SAAe,KAAEC,OACpDE,EAAaL,OAAOH,EAAMI,OAAOC,SAAiB,OAAEC,OAEhDG,YAAW,WAEnBzB,EADAD,GAAY,EACYmB,GACxBR,QAAQC,IAAIZ,GACZW,QAAQC,IAAIO,GACZpB,EAAa4B,aAAY,WAEvB1B,EADAD,GAAY,EACYwB,GACxBb,QAAQC,IAAIZ,GACZW,QAAQC,IAAIY,GACRxB,EAAWyB,EAAa,GAC1BG,cAAc7B,E,GAEfyB,E,OAmBPnB,QAAQwB,IAAIC,UACTC,MAAK,SAAAC,G,IAAGC,EAAQD,EAARtB,SAAUP,EAAK6B,EAAL7B,MACjBQ,QAAQC,IAAI,uBAAwCsB,OAAfD,EAAS,QAAYC,OAAN/B,EAAM,M,IAE3DgC,OAAM,SAAAH,G,IAAEI,EAAQJ,EAARtB,SAAUP,EAAK6B,EAAL7B,MACnBQ,QAAQC,IAAI,sBAAuCsB,OAAfE,EAAS,QAAYF,OAAN/B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["let timerId = null;\nlet intervalId = null;\nlet position = null;\n\n\n\nconst refs = {\n  form: document.querySelector('.form'),  \n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();  \n\n  const userDelay = Number(event.target.elements['delay'].value);\n  const userInterval = Number(event.target.elements['step'].value);\n  const userAmount = Number(event.target.elements['amount'].value);\n\n  timerId = setTimeout(() => {\n    position += 1;\n    createPromise(position, userDelay)\n    console.log(position);\n    console.log(userDelay);\n    intervalId = setInterval(() => {      \n      position += 1;\n      createPromise(position, userInterval)\n      console.log(position);\n      console.log(userInterval);\n      if (position > userAmount - 1) {\n        clearInterval(intervalId);\n      }\n    }, userInterval), userDelay\n})    \n}\n\nfunction createPromise(position, delay) {\n  \n  const promises = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve ({position, delay})\n    }\n    else {\n      reject ({position, delay})\n    }\n  })\n  console.log(promises);\n  return promises;\n}\n\nPromise.all(promises)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({position, delay}) => {\n  console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n});\n\n// function onFormSubmit(event) {\n//   event.preventDefault();\n//   delay = Number(event.target.elements['delay'].value);\n//   interval = Number(event.target.elements['step'].value);\n//   const userAmount = Number(event.target.elements['amount'].value);\n//   timerId = setTimeout(() => {\n//     position += 1;\n//     console.log(position);\n//     console.log(delay);\n//     intervalId = setInterval(() => {      \n//       position += 1;\n//       console.log(position);\n//       console.log(interval);\n//       if (position > userAmount - 1) {\n//         clearInterval(intervalId);\n//       }\n//     }, interval), delay\n// })    \n// }\n\n\n\n// const promise = new Promise((resolve, reject) => {\n//   const canFulfill = Math.random() > 0.5;\n\n//   setTimeout(() => {\n//     if (canFulfill) {\n//       resolve('Промис выполнился успешно, с результатом (исполнен, fulfilled)');\n//     }\n\n//     reject('Промис выполнился с ошибкой (отклонён, rejected)');\n//   }, 1000);\n// });\n\n// promise.then(onFulfilled, onRejected);\n\n// function onFulfilled(result) {\n//   console.log('onFulfilled -> onFulfilled');\n//   console.log(`✅ ${result}`);\n// }\n\n// function onRejected(error) {\n//   console.log('onRejected -> onRejected');\n//   console.log(`❌ ${error}`);\n// }\n"],"names":["$ce04d3a99e08e73b$var$intervalId","$ce04d3a99e08e73b$var$position","$ce04d3a99e08e73b$var$createPromise","position1","delay","_$promises","Promise","resolve","reject","Math","random","position","console","log","form","document","querySelector","addEventListener","event","preventDefault","userDelay","Number","target","elements","value","userInterval","userAmount","setTimeout","setInterval","clearInterval","all","promises","then","param","position2","concat","catch","position3"],"version":3,"file":"03-promises.49c0da0a.js.map"}